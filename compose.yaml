# https://docs.docker.com/compose/compose-file/08-configs/
# https://docs.docker.com/compose/compose-file/05-services/#configs
# https://www.postgresql.org/docs/current/libpq-pgpass.html
#configs:

networks:
  backend:
    driver: bridge
  frontend:
    driver: bridge

# https://docs.docker.com/engine/swarm/secrets/
# https://docs.docker.com/compose/use-secrets/
# https://docs.docker.com/compose/compose-file/09-secrets/
secrets:
  db_root_password:
    environment: "MYSQL_ROOT_PASSWORD"

volumes:
  certbot_live:
  data:
  mariadb:
  phpmyadmin:
  redis:
  socket_php:

services:

### MkCert & OpenSSL ####################################################
  certs:
    build:
      context: ./src/certs
      args:
        SERVER_NAME: ${SERVER_NAME}
        VERSION_CERTS: ${VERSION_CERTS}
    restart: ${RESTART_POLICY}
    volumes:
      - certbot_live:/etc/letsencrypt/live/${SERVER_NAME}
    environment:
      - LOCALHOST=mkcert
      - TZ=${TZ}
    networks:
      - backend

### MariaDB ####################################################################
# https://hub.docker.com/_/mariadb
# https://mariadb.com/kb/en/container-backup-and-restoration/
  mariadb:
    image: mariadb:${VERSION_MARIADB}
    restart: ${RESTART_POLICY}
    volumes:
      - mariadb:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD_FILE=/run/secrets/db_root_password
      - TZ=${TZ}
    secrets:
       - db_root_password
    networks:
      - backend

### PhpMyAdmin #################################################################
  phpmyadmin:
    image: phpmyadmin:${VERSION_PHPMYADMIN}
    restart: ${RESTART_POLICY}
    environment:
      - PMA_ARBITRARY=1
    volumes:
      - phpmyadmin:/sessions
    ports:
      - 8080:80
    depends_on:
      - mariadb
    networks:
      - backend
      - frontend

### PHP-FPM ####################################################################
  php-fpm:
    build:
      context: ./src/php-fpm
      args:
        VERSION_PHP: ${VERSION_PHP}
    restart: ${RESTART_POLICY}
    volumes:
      - data:${PROJECT_CONTAINER_DIR}
      - socket_php:/run/php-fpm
      - ./src/php-fpm/wordpress.ini:/usr/local/etc/php/conf.d/wordpress.ini:ro
    depends_on:
      - mariadb
    networks:
      - backend
    extra_hosts:
      - "${SERVER_NAME}:host-gateway"

# ### NGINX ######################################################################
# # https://github.com/h5bp/server-configs-nginx
# # https://github.com/lebinh/nginx-conf
#   nginx:
#     build:
#       context: ./src/nginx
#       args:
#         ENABLED_MODULES: ndk lua
#         PHP_UPSTREAM_CONTAINER: php-fpm
#         PROJECT_CONTAINER_DIR: ${PROJECT_CONTAINER_DIR}
#         # SOCKET: php-fpm:${PHP_UPSTREAM_PORT}
#         SOCKET: unix:/run/php-fpm/nginx.sock
#         USER_NAME: ${USER_NAME}
#         VERSION_NGINX: ${VERSION_NGINX}
#     restart: ${RESTART_POLICY}
#     volumes:
#       - certbot_conf:/etc/nginx/ssl:ro
#       - certbot_www:/var/www/certbot:ro
#       - data:${PROJECT_CONTAINER_DIR}
#       - socket_php:/run/php-fpm
#       - ./src/nginx/global:/etc/nginx/global:ro
#       - ./src/nginx/sites:/etc/nginx/sites-available:ro
#       - ./src/nginx/templates:/etc/nginx/templates:ro
#     environment:
#       - PROJECT_CONTAINER_DIR=${PROJECT_CONTAINER_DIR}
#       - SERVER_NAME=${SERVER_NAME}
#     secrets:
#        - ssl_certificate
#        - ssl_certificate_key
#     ports:
#       - 80:80
#       - 443:443
#     depends_on:
#       # - certbot
#       - php-fpm
#     networks:
#       # `backend` needed, if TCP socket used for PHP-FPM
#       # - backend
#       - frontend

### Apache #####################################################################
  apache:
    build:
      context: ./src/httpd
      args:
        PHP_UPSTREAM_CONTAINER: php-fpm
        PROJECT_CONTAINER_DIR: ${PROJECT_CONTAINER_DIR}
        SERVER_NAME: ${SERVER_NAME}
        SOCKET: unix:/run/php-fpm/apache.sock
        USER_NAME: ${USER_NAME}
        VERSION_APACHE: ${VERSION_APACHE}
    restart: ${RESTART_POLICY}
    volumes:
      - certbot_live:/etc/letsencrypt/live/${SERVER_NAME}
      - data:${PROJECT_CONTAINER_DIR}
      - socket_php:/run/php-fpm
    environment:
      - PROJECT_CONTAINER_DIR=${PROJECT_CONTAINER_DIR}
      - SERVER_NAME=${SERVER_NAME}
    ports:
      - 80:80
      - 443:443
    depends_on:
      - certs
      - php-fpm
    networks:
      # `backend` needed, if TCP socket used for PHP-FPM
      # - backend
      - frontend

### SFTP #######################################################################
# $ sftp -P 2222 www-data@docker.test
  sftp:
    build:
      context: ./src/sftp
      args:
        PROJECT_CONTAINER_DIR: ${PROJECT_CONTAINER_DIR}
        SFTP_PASSWORD: ${SFTP_PASSWORD}
        USER_ID: ${USER_ID}
        USER_NAME: ${USER_NAME}
    restart: ${RESTART_POLICY}
    volumes:
      - data:${PROJECT_CONTAINER_DIR}
    ports:
      - 2222:22
    depends_on:
      - php-fpm
    networks:
      - frontend
